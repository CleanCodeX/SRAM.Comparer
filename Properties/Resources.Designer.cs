//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SramComparer.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SramComparer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All ähnelt.
        /// </summary>
        public static string All {
            get {
                return ResourceManager.GetString("All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die bytes ähnelt.
        /// </summary>
        public static string Bytes {
            get {
                return ResourceManager.GetString("Bytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back-up comparison-file ähnelt.
        /// </summary>
        public static string CmdBackupComparisonFile {
            get {
                return ResourceManager.GetString("CmdBackupComparisonFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back-up current-file ähnelt.
        /// </summary>
        public static string CmdBackupCurrentFile {
            get {
                return ResourceManager.GetString("CmdBackupCurrentFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wipe previous console output ähnelt.
        /// </summary>
        public static string CmdClearOutput {
            get {
                return ResourceManager.GetString("CmdClearOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare current-file with comparison file ähnelt.
        /// </summary>
        public static string CmdCompareFiles {
            get {
                return ResourceManager.GetString("CmdCompareFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set comparison result language ähnelt.
        /// </summary>
        public static string CmdComparisonResultLanguage {
            get {
                return ResourceManager.GetString("CmdComparisonResultLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display config ähnelt.
        /// </summary>
        public static string CmdConfig {
            get {
                return ResourceManager.GetString("CmdConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable config auto-loading ähnelt.
        /// </summary>
        public static string CmdConfigAutoLoadOff {
            get {
                return ResourceManager.GetString("CmdConfigAutoLoadOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable config auto-loading ähnelt.
        /// </summary>
        public static string CmdConfigAutoLoadOn {
            get {
                return ResourceManager.GetString("CmdConfigAutoLoadOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create key binding file ähnelt.
        /// </summary>
        public static string CmdCreateKeyBindingFile {
            get {
                return ResourceManager.GetString("CmdCreateKeyBindingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modify (and save) offset value ähnelt.
        /// </summary>
        public static string CmdEditOffset {
            get {
                return ResourceManager.GetString("CmdEditOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export current comparison result ähnelt.
        /// </summary>
        public static string CmdExportComparisonResult {
            get {
                return ResourceManager.GetString("CmdExportComparisonResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export flags ähnelt.
        /// </summary>
        public static string CmdExportFlags {
            get {
                return ResourceManager.GetString("CmdExportFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backup ähnelt.
        /// </summary>
        public static string CmdGroupBackup {
            get {
                return ResourceManager.GetString("CmdGroupBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison ähnelt.
        /// </summary>
        public static string CmdGroupComparison {
            get {
                return ResourceManager.GetString("CmdGroupComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Config ähnelt.
        /// </summary>
        public static string CmdGroupConfig {
            get {
                return ResourceManager.GetString("CmdGroupConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display ähnelt.
        /// </summary>
        public static string CmdGroupDisplay {
            get {
                return ResourceManager.GetString("CmdGroupDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language ähnelt.
        /// </summary>
        public static string CmdGroupLanguage {
            get {
                return ResourceManager.GetString("CmdGroupLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Miscellaneous ähnelt.
        /// </summary>
        public static string CmdGroupMisc {
            get {
                return ResourceManager.GetString("CmdGroupMisc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set save slot ähnelt.
        /// </summary>
        public static string CmdGroupSetsSaveSlot {
            get {
                return ResourceManager.GetString("CmdGroupSetsSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Guide (savestate) ähnelt.
        /// </summary>
        public static string CmdGuideSavestate {
            get {
                return ResourceManager.GetString("CmdGuideSavestate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Guide (srm) ähnelt.
        /// </summary>
        public static string CmdGuideSrm {
            get {
                return ResourceManager.GetString("CmdGuideSrm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set UI-language ähnelt.
        /// </summary>
        public static string CmdLanguage {
            get {
                return ResourceManager.GetString("CmdLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List commands ähnelt.
        /// </summary>
        public static string CmdListCommands {
            get {
                return ResourceManager.GetString("CmdListCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load config ähnelt.
        /// </summary>
        public static string CmdLoadConfig {
            get {
                return ResourceManager.GetString("CmdLoadConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add non-slot byte-by-byte comparison ähnelt.
        /// </summary>
        public static string CmdNonSlotByteByByteComparison {
            get {
                return ResourceManager.GetString("CmdNonSlotByteByByteComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display offset value ähnelt.
        /// </summary>
        public static string CmdOffset {
            get {
                return ResourceManager.GetString("CmdOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open config file ähnelt.
        /// </summary>
        public static string CmdOpenConfig {
            get {
                return ResourceManager.GetString("CmdOpenConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open key binding file ähnelt.
        /// </summary>
        public static string CmdOpenKeyBindingFile {
            get {
                return ResourceManager.GetString("CmdOpenKeyBindingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overwrite (or create) comparison file with current-file ähnelt.
        /// </summary>
        public static string CmdOverwriteComparisonFile {
            get {
                return ResourceManager.GetString("CmdOverwriteComparisonFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quit ähnelt.
        /// </summary>
        public static string CmdQuit {
            get {
                return ResourceManager.GetString("CmdQuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore comparison-file from backup ähnelt.
        /// </summary>
        public static string CmdRestoreComparisonFile {
            get {
                return ResourceManager.GetString("CmdRestoreComparisonFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore current-file from backup ähnelt.
        /// </summary>
        public static string CmdRestoreCurrentFile {
            get {
                return ResourceManager.GetString("CmdRestoreCurrentFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save config ähnelt.
        /// </summary>
        public static string CmdSaveConfig {
            get {
                return ResourceManager.GetString("CmdSaveConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save current-file with other game file&apos;s name ähnelt.
        /// </summary>
        public static string CmdSaveCurrentFileWithOtherFileName {
            get {
                return ResourceManager.GetString("CmdSaveCurrentFileWithOtherFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set comparison file&apos;s save slot ähnelt.
        /// </summary>
        public static string CmdSetComparisonFileSaveSlot {
            get {
                return ResourceManager.GetString("CmdSetComparisonFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set current file&apos;s save slot ähnelt.
        /// </summary>
        public static string CmdSetCurrentSrramFileSaveSlot {
            get {
                return ResourceManager.GetString("CmdSetCurrentSrramFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show save slot checksum status ähnelt.
        /// </summary>
        public static string CmdShowChecksumStatus {
            get {
                return ResourceManager.GetString("CmdShowChecksumStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add slot byte-by-byte comparison ähnelt.
        /// </summary>
        public static string CmdSlotByteByBytesComparison {
            get {
                return ResourceManager.GetString("CmdSlotByteByBytesComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change ähnelt.
        /// </summary>
        public static string CompChangeShort {
            get {
                return ResourceManager.GetString("CompChangeShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison ähnelt.
        /// </summary>
        public static string CompComparison {
            get {
                return ResourceManager.GetString("CompComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comp ähnelt.
        /// </summary>
        public static string CompComparisonShort {
            get {
                return ResourceManager.GetString("CompComparisonShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current ähnelt.
        /// </summary>
        public static string CompCurrent {
            get {
                return ResourceManager.GetString("CompCurrent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Curr ähnelt.
        /// </summary>
        public static string CompCurrentShort {
            get {
                return ResourceManager.GetString("CompCurrentShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New ähnelt.
        /// </summary>
        public static string CompNew {
            get {
                return ResourceManager.GetString("CompNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset ähnelt.
        /// </summary>
        public static string CompOffset {
            get {
                return ResourceManager.GetString("CompOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Old ähnelt.
        /// </summary>
        public static string CompOld {
            get {
                return ResourceManager.GetString("CompOld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Same as current file&apos;s save slot ähnelt.
        /// </summary>
        public static string CompSameAsCurrentFileSaveSlot {
            get {
                return ResourceManager.GetString("CompSameAsCurrentFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Section ähnelt.
        /// </summary>
        public static string CompSection {
            get {
                return ResourceManager.GetString("CompSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Non-save slot unknowns ähnelt.
        /// </summary>
        public static string CompSectionNonSaveSlotUnknowns {
            get {
                return ResourceManager.GetString("CompSectionNonSaveSlotUnknowns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All (knowns + unknowns) ähnelt.
        /// </summary>
        public static string CompSectionSaveSlotChangedTemplate {
            get {
                return ResourceManager.GetString("CompSectionSaveSlotChangedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size ähnelt.
        /// </summary>
        public static string CompSize {
            get {
                return ResourceManager.GetString("CompSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot ähnelt.
        /// </summary>
        public static string CompSlot {
            get {
                return ResourceManager.GetString("CompSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die S-RAM ähnelt.
        /// </summary>
        public static string CompSram {
            get {
                return ResourceManager.GetString("CompSram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknowns only ähnelt.
        /// </summary>
        public static string CompUnknownAreasOnly {
            get {
                return ResourceManager.GetString("CompUnknownAreasOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Config ähnelt.
        /// </summary>
        public static string Config {
            get {
                return ResourceManager.GetString("Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Colorize output ähnelt.
        /// </summary>
        public static string ConfigColorizeOutput {
            get {
                return ResourceManager.GetString("ConfigColorizeOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison filepath ähnelt.
        /// </summary>
        public static string ConfigComparisonFilePath {
            get {
                return ResourceManager.GetString("ConfigComparisonFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot (Comparison file) ähnelt.
        /// </summary>
        public static string ConfigComparisonFileSaveSlot {
            get {
                return ResourceManager.GetString("ConfigComparisonFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison flags ähnelt.
        /// </summary>
        public static string ConfigComparisonFlags {
            get {
                return ResourceManager.GetString("ConfigComparisonFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison result language ähnelt.
        /// </summary>
        public static string ConfigComparisonResultLanguage {
            get {
                return ResourceManager.GetString("ConfigComparisonResultLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current filepath ähnelt.
        /// </summary>
        public static string ConfigCurrentFilePath {
            get {
                return ResourceManager.GetString("ConfigCurrentFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot (current file) ähnelt.
        /// </summary>
        public static string ConfigCurrentFileSaveSlot {
            get {
                return ResourceManager.GetString("ConfigCurrentFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export directory ähnelt.
        /// </summary>
        public static string ConfigExportDirectory {
            get {
                return ResourceManager.GetString("ConfigExportDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export flags ähnelt.
        /// </summary>
        public static string ConfigExportFlags {
            get {
                return ResourceManager.GetString("ConfigExportFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Config file path ähnelt.
        /// </summary>
        public static string ConfigFilePath {
            get {
                return ResourceManager.GetString("ConfigFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UI language ähnelt.
        /// </summary>
        public static string ConfigUILanguage {
            get {
                return ResourceManager.GetString("ConfigUILanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter command and press enter. ähnelt.
        /// </summary>
        public static string EnterCommand {
            get {
                return ResourceManager.GetString("EnterCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter index (0 to {0}) of the file to be overwritten (any other key to cancel): ähnelt.
        /// </summary>
        public static string EnterIndexOfFileToOverwriteTemplate {
            get {
                return ResourceManager.GetString("EnterIndexOfFileToOverwriteTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Append export data to the applications log file ähnelt.
        /// </summary>
        public static string EnumAppendToAppLogFile {
            get {
                return ResourceManager.GetString("EnumAppendToAppLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show save slot checksum status ähnelt.
        /// </summary>
        public static string EnumChecksumStatus {
            get {
                return ResourceManager.GetString("EnumChecksumStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison file ähnelt.
        /// </summary>
        public static string EnumComparisonFile {
            get {
                return ResourceManager.GetString("EnumComparisonFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current file ähnelt.
        /// </summary>
        public static string EnumCurrentFile {
            get {
                return ResourceManager.GetString("EnumCurrentFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete comparison file ähnelt.
        /// </summary>
        public static string EnumDeleteCompFile {
            get {
                return ResourceManager.GetString("EnumDeleteCompFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export-options ähnelt.
        /// </summary>
        public static string EnumExportFlags {
            get {
                return ResourceManager.GetString("EnumExportFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Game region ähnelt.
        /// </summary>
        public static string EnumGameRegion {
            get {
                return ResourceManager.GetString("EnumGameRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Non-slot byte-by-byte comparison ähnelt.
        /// </summary>
        public static string EnumNonSlotComparison {
            get {
                return ResourceManager.GetString("EnumNonSlotComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open export file ähnelt.
        /// </summary>
        public static string EnumOpenExportFile {
            get {
                return ResourceManager.GetString("EnumOpenExportFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overwrite comparison file ähnelt.
        /// </summary>
        public static string EnumOverwriteCompFile {
            get {
                return ResourceManager.GetString("EnumOverwriteCompFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exxport file prompt ähnelt.
        /// </summary>
        public static string EnumPromptExportFile {
            get {
                return ResourceManager.GetString("EnumPromptExportFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select export file ähnelt.
        /// </summary>
        public static string EnumSelectExportFile {
            get {
                return ResourceManager.GetString("EnumSelectExportFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Slot byte-by-byte comparison ähnelt.
        /// </summary>
        public static string EnumSlotByteComparison {
            get {
                return ResourceManager.GetString("EnumSlotByteComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot open output file &quot;{0}&quot; for writing ähnelt.
        /// </summary>
        public static string ErrorCannotOpenOutputFileTemplate {
            get {
                return ResourceManager.GetString("ErrorCannotOpenOutputFileTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Command (overwrite) needs to be implemented by caller. ähnelt.
        /// </summary>
        public static string ErrorCommandNotImplementedTemplate {
            get {
                return ResourceManager.GetString("ErrorCommandNotImplementedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The comparison file &quot;{0}&quot; has not been created yet. Please create by pressing (OC). ähnelt.
        /// </summary>
        public static string ErrorComparisonFileDoesNotExist {
            get {
                return ResourceManager.GetString("ErrorComparisonFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot for comparison-file can only be set if current file&apos;s save slot is set first. ähnelt.
        /// </summary>
        public static string ErrorCompSaveSlotSetButNotForCurrFile {
            get {
                return ResourceManager.GetString("ErrorCompSaveSlotSetButNotForCurrFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The config file [{0}] does not exist (yet). ähnelt.
        /// </summary>
        public static string ErrorConfigFileDoesNotExist {
            get {
                return ResourceManager.GetString("ErrorConfigFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The ({0}) file: [{1}] has an unsupported file extension. Did you just forget to quote the path? Supported file extensions are: {2} ähnelt.
        /// </summary>
        public static string ErrorInvalidFileExtensionTemplate {
            get {
                return ResourceManager.GetString("ErrorInvalidFileExtensionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid flags: ähnelt.
        /// </summary>
        public static string ErrorInvalidFlags {
            get {
                return ResourceManager.GetString("ErrorInvalidFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid index. Aborted. ähnelt.
        /// </summary>
        public static string ErrorInvalidIndex {
            get {
                return ResourceManager.GetString("ErrorInvalidIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The key bindings file [{0}] does not exist (yet). ähnelt.
        /// </summary>
        public static string ErrorKeyBindingsFileDoesNotExist {
            get {
                return ResourceManager.GetString("ErrorKeyBindingsFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ERROR: The program needs to be started with at least the path to current save file as a parameter. Drag &apos;n&apos; drop can be used. ähnelt.
        /// </summary>
        public static string ErrorMissingPathArguments {
            get {
                return ResourceManager.GetString("ErrorMissingPathArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;{0}&quot; is an unknown command. To list all available commands enter ({1}). ähnelt.
        /// </summary>
        public static string ErrorNoValidCommandCmdTemplate {
            get {
                return ResourceManager.GetString("ErrorNoValidCommandCmdTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Operation aborted ähnelt.
        /// </summary>
        public static string ErrorOperationAborted {
            get {
                return ResourceManager.GetString("ErrorOperationAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter name value mismatch for: {0} ähnelt.
        /// </summary>
        public static string ErrorParamNameValueMissmatchTemplate {
            get {
                return ResourceManager.GetString("ErrorParamNameValueMissmatchTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Savestate offset edit is currently not supported. ähnelt.
        /// </summary>
        public static string ErrorSavestateOffsetEditNotSupported {
            get {
                return ResourceManager.GetString("ErrorSavestateOffsetEditNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare non-save slot area ähnelt.
        /// </summary>
        public static string PromptCompareNonSaveSlotArea {
            get {
                return ResourceManager.GetString("PromptCompareNonSaveSlotArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Would you like to create a new file instead of overwriting the current file? Type 1 for creating a new file (recommended) or type 2 to overwrite the existing file. In the latter case make sure to have a backup created before. 1 = new, 2 = overwrite, 0 = abort ähnelt.
        /// </summary>
        public static string PromptCreateNewFileInsteadOfOverwriting {
            get {
                return ResourceManager.GetString("PromptCreateNewFileInsteadOfOverwriting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter specific config name or empty for default config. ähnelt.
        /// </summary>
        public static string PromptEnterConfigName {
            get {
                return ResourceManager.GetString("PromptEnterConfigName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter an export file name: (or leave empty) ähnelt.
        /// </summary>
        public static string PromptEnterExportFileName {
            get {
                return ResourceManager.GetString("PromptEnterExportFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter all flags to set: ähnelt.
        /// </summary>
        public static string PromptEnterFlags {
            get {
                return ResourceManager.GetString("PromptEnterFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter save slot {0} offset address: ähnelt.
        /// </summary>
        public static string PromptEnterSaveSlotOffsetTemplate {
            get {
                return ResourceManager.GetString("PromptEnterSaveSlotOffsetTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set save slot offset value: ähnelt.
        /// </summary>
        public static string PromptEnterSaveSlotOffsetValue {
            get {
                return ResourceManager.GetString("PromptEnterSaveSlotOffsetValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the comparison result language (e.g. &apos;en&apos; for English - without quotes). An empty input resets the setting. ähnelt.
        /// </summary>
        public static string PromptSetComparionResultLanguage {
            get {
                return ResourceManager.GetString("PromptSetComparionResultLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set save slot (1-{0} or any other key for all save slots) to compare: ähnelt.
        /// </summary>
        public static string PromptSetSaveSlotTemplate {
            get {
                return ResourceManager.GetString("PromptSetSaveSlotTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter save slot (1-{0}): ähnelt.
        /// </summary>
        public static string PromptSetSingleSaveSlotTemplate {
            get {
                return ResourceManager.GetString("PromptSetSingleSaveSlotTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the UI language (e.g. &apos;en&apos; for English - without quotes). An empty input resets the setting. ähnelt.
        /// </summary>
        public static string PromptSetUILanguage {
            get {
                return ResourceManager.GetString("PromptSetUILanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Queued commands ähnelt.
        /// </summary>
        public static string QueuedCommands {
            get {
                return ResourceManager.GetString("QueuedCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die S-RAM offset ähnelt.
        /// </summary>
        public static string SramOffset {
            get {
                return ResourceManager.GetString("SramOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New here? For a list of available commands press ({0}|?) or ({1}) for a guide. If there wasn&apos;t a comparison file yet, it has been created  now. ähnelt.
        /// </summary>
        public static string StartMessage {
            get {
                return ResourceManager.GetString("StartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All save slots will be compared. ähnelt.
        /// </summary>
        public static string StatusAllSaveSlotsComparison {
            get {
                return ResourceManager.GetString("StatusAllSaveSlotsComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} bytes changed. ähnelt.
        /// </summary>
        public static string StatusBytesChangedTemplate {
            get {
                return ResourceManager.GetString("StatusBytesChangedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The comparison file has been deleted. ähnelt.
        /// </summary>
        public static string StatusCompFileDeleted {
            get {
                return ResourceManager.GetString("StatusCompFileDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The comparison file has been overwritten. ähnelt.
        /// </summary>
        public static string StatusCompFileOverwritten {
            get {
                return ResourceManager.GetString("StatusCompFileOverwritten", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Config file [{0}] has been saved. ähnelt.
        /// </summary>
        public static string StatusConfigFileSavedTemplate {
            get {
                return ResourceManager.GetString("StatusConfigFileSavedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Config file [{0}] will be opened… ähnelt.
        /// </summary>
        public static string StatusConfigFileWillBeOpenedTemplate {
            get {
                return ResourceManager.GetString("StatusConfigFileWillBeOpenedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current comparison exported to &quot;{0}&quot;. ähnelt.
        /// </summary>
        public static string StatusCurrentComparisonExportedTemplate {
            get {
                return ResourceManager.GetString("StatusCurrentComparisonExportedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current file has been saved as comparison file. ähnelt.
        /// </summary>
        public static string StatusCurrentFileSaved {
            get {
                return ResourceManager.GetString("StatusCurrentFileSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has been backed-up. ähnelt.
        /// </summary>
        public static string StatusCurrFileBackedUpTemplate {
            get {
                return ResourceManager.GetString("StatusCurrFileBackedUpTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current file has been copied as {0}. ähnelt.
        /// </summary>
        public static string StatusCurrFileSavedAsTemplate {
            get {
                return ResourceManager.GetString("StatusCurrFileSavedAsTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current save slot {0} will be compared with comparison save slot {1}. ähnelt.
        /// </summary>
        public static string StatusDifferentSaveSlotComparisonTemplate {
            get {
                return ResourceManager.GetString("StatusDifferentSaveSlotComparisonTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export file [{0}] set. ähnelt.
        /// </summary>
        public static string StatusExportFileNameSet {
            get {
                return ResourceManager.GetString("StatusExportFileNameSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export flags set: {0}. ähnelt.
        /// </summary>
        public static string StatusExportFlagsSetTemplate {
            get {
                return ResourceManager.GetString("StatusExportFlagsSetTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target file has been backed up as {0}. ähnelt.
        /// </summary>
        public static string StatusFileBackedUpTemplate {
            get {
                return ResourceManager.GetString("StatusFileBackedUpTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has been restored from backup. ähnelt.
        /// </summary>
        public static string StatusFileRestoredFromBackupTemplate {
            get {
                return ResourceManager.GetString("StatusFileRestoredFromBackupTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value at offset {0} is currently {1}. ähnelt.
        /// </summary>
        public static string StatusGetOffsetValueTemplate {
            get {
                return ResourceManager.GetString("StatusGetOffsetValueTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key bindings file [{0}] has been saved. ähnelt.
        /// </summary>
        public static string StatusKeyBindingsFileSavedTemplate {
            get {
                return ResourceManager.GetString("StatusKeyBindingsFileSavedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edited current file has been overwritten. File: {0}. ähnelt.
        /// </summary>
        public static string StatusModifiedFileOverwrittenTemplate {
            get {
                return ResourceManager.GetString("StatusModifiedFileOverwrittenTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edited current file has been saved as {0}. ähnelt.
        /// </summary>
        public static string StatusModifiedFileSavedAsTemplate {
            get {
                return ResourceManager.GetString("StatusModifiedFileSavedAsTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are currently no other files with same file extension available. ähnelt.
        /// </summary>
        public static string StatusNoAvailableOtherFiles {
            get {
                return ResourceManager.GetString("StatusNoAvailableOtherFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no guide available ähnelt.
        /// </summary>
        public static string StatusNoGuideAvailable {
            get {
                return ResourceManager.GetString("StatusNoGuideAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown non-save slot area: {0} bytes changed. ähnelt.
        /// </summary>
        public static string StatusNonSaveSlotUnknownsBytesTemplate {
            get {
                return ResourceManager.GetString("StatusNonSaveSlotUnknownsBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No bytes changed ähnelt.
        /// </summary>
        public static string StatusNoSramBytesChanged {
            get {
                return ResourceManager.GetString("StatusNoSramBytesChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset value {0} will bFe set. ähnelt.
        /// </summary>
        public static string StatusOffsetValueWillBeUsedTemplate {
            get {
                return ResourceManager.GetString("StatusOffsetValueWillBeUsedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset {0} will be used. ähnelt.
        /// </summary>
        public static string StatusOffsetWillBeUsedTemplate {
            get {
                return ResourceManager.GetString("StatusOffsetWillBeUsedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All (knowns + unknowns): {0} bytes changed. ähnelt.
        /// </summary>
        public static string StatusSaveSlotChangedBytesTemplate {
            get {
                return ResourceManager.GetString("StatusSaveSlotChangedBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value at offset {0} is now {1}. ähnelt.
        /// </summary>
        public static string StatusSetOffsetValueTemplate {
            get {
                return ResourceManager.GetString("StatusSetOffsetValueTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot {0} will be used. ähnelt.
        /// </summary>
        public static string StatusSetSingleSaveSlotMaxTemplate {
            get {
                return ResourceManager.GetString("StatusSetSingleSaveSlotMaxTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only save slot {0} will be compared. ähnelt.
        /// </summary>
        public static string StatusSingleSaveSlotComparisonTemplate {
            get {
                return ResourceManager.GetString("StatusSingleSaveSlotComparisonTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} bytes changed. ähnelt.
        /// </summary>
        public static string StatusSramChangedBytesTemplate {
            get {
                return ResourceManager.GetString("StatusSramChangedBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total: {0} bytes changed (outside save slot area). ähnelt.
        /// </summary>
        public static string StatusTotalDiffBytesTemplate {
            get {
                return ResourceManager.GetString("StatusTotalDiffBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknowns only: {0} bytes changed. ähnelt.
        /// </summary>
        public static string StatusUnknownsChangedBytesTemplate {
            get {
                return ResourceManager.GetString("StatusUnknownsChangedBytesTemplate", resourceCulture);
            }
        }
    }
}
