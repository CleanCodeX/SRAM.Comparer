//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SramComparer.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SramComparer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All ähnelt.
        /// </summary>
        public static string All {
            get {
                return ResourceManager.GetString("All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This tool compares unknown areas in SRAM. ähnelt.
        /// </summary>
        public static string AppDescription {
            get {
                return ResourceManager.GetString("AppDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Steps: 
        ///1.1) Have a look at http://unknowns.xeth.de to see examples of what parts of SRAM structure are still 
        ///     considered as unknown.
        ///1.2) Most emulators have the option to save the game&apos;s S-RAM automatically after a change occurs. 
        ///     Make sure this is enabled if existing. Otherwise you have manually ensure that the emulator updates 
        ///     the *.srm file.
        ///1.3) Start the application by passing the game&apos;s srm filepath as first command parameter. The file can also be 
        ///     dragged onto the applic [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string AppManualCommandsTemplate {
            get {
                return ResourceManager.GetString("AppManualCommandsTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backup ähnelt.
        /// </summary>
        public static string Backup {
            get {
                return ResourceManager.GetString("Backup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die bytes ähnelt.
        /// </summary>
        public static string Bytes {
            get {
                return ResourceManager.GetString("Bytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change ähnelt.
        /// </summary>
        public static string ChangeShort {
            get {
                return ResourceManager.GetString("ChangeShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backup ähnelt.
        /// </summary>
        public static string CmdGroupBackup {
            get {
                return ResourceManager.GetString("CmdGroupBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison ähnelt.
        /// </summary>
        public static string CmdGroupComparison {
            get {
                return ResourceManager.GetString("CmdGroupComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display ähnelt.
        /// </summary>
        public static string CmdGroupDisplay {
            get {
                return ResourceManager.GetString("CmdGroupDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set save slot-ID ähnelt.
        /// </summary>
        public static string CmdGroupSetsSaveSlotId {
            get {
                return ResourceManager.GetString("CmdGroupSetsSaveSlotId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Miscellaneous ähnelt.
        /// </summary>
        public static string CmdMisc {
            get {
                return ResourceManager.GetString("CmdMisc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Colorize output ähnelt.
        /// </summary>
        public static string ColorizeOutput {
            get {
                return ResourceManager.GetString("ColorizeOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back-up comparison SRAM file ähnelt.
        /// </summary>
        public static string CommandBackupComparisonSramFile {
            get {
                return ResourceManager.GetString("CommandBackupComparisonSramFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back-up current SRAM file ähnelt.
        /// </summary>
        public static string CommandBackupCurrentSramFile {
            get {
                return ResourceManager.GetString("CommandBackupCurrentSramFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare current SRAM file with comparison file ähnelt.
        /// </summary>
        public static string CommandCompareFile {
            get {
                return ResourceManager.GetString("CommandCompareFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do non-slot bytes comparison ähnelt.
        /// </summary>
        public static string CommandDoNonSlotBytesComparison {
            get {
                return ResourceManager.GetString("CommandDoNonSlotBytesComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do slot all bytes comparison ähnelt.
        /// </summary>
        public static string CommandDoSlotAllBytesComparison {
            get {
                return ResourceManager.GetString("CommandDoSlotAllBytesComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export current comparison result ähnelt.
        /// </summary>
        public static string CommandExportComparisonResult {
            get {
                return ResourceManager.GetString("CommandExportComparisonResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List commands ähnelt.
        /// </summary>
        public static string CommandListCommands {
            get {
                return ResourceManager.GetString("CommandListCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Manual ähnelt.
        /// </summary>
        public static string CommandManual {
            get {
                return ResourceManager.GetString("CommandManual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modify (and save) offset value ähnelt.
        /// </summary>
        public static string CommandModifyOffsetValue {
            get {
                return ResourceManager.GetString("CommandModifyOffsetValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display offset value ähnelt.
        /// </summary>
        public static string CommandOffsetValue {
            get {
                return ResourceManager.GetString("CommandOffsetValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overwrite (or create) comparison file with current SRAM file ähnelt.
        /// </summary>
        public static string CommandOverwriteComparisonSramFile {
            get {
                return ResourceManager.GetString("CommandOverwriteComparisonSramFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quit ähnelt.
        /// </summary>
        public static string CommandQuit {
            get {
                return ResourceManager.GetString("CommandQuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore comparison SRAM file from backup ähnelt.
        /// </summary>
        public static string CommandRestoreComparisonSramFile {
            get {
                return ResourceManager.GetString("CommandRestoreComparisonSramFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore current SRAM file from backup ähnelt.
        /// </summary>
        public static string CommandRestoreCurrentSramFile {
            get {
                return ResourceManager.GetString("CommandRestoreCurrentSramFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save current-SRAM file with other game file&apos;s name ähnelt.
        /// </summary>
        public static string CommandSaveCurrentSramFileAsOtherFileName {
            get {
                return ResourceManager.GetString("CommandSaveCurrentSramFileAsOtherFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set comparison SRAM file&apos;s save slot ähnelt.
        /// </summary>
        public static string CommandSetComparisonSramFileSaveSlot {
            get {
                return ResourceManager.GetString("CommandSetComparisonSramFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set current SRAM file&apos;s save slot ähnelt.
        /// </summary>
        public static string CommandSetCurrentSrramFileSaveSlot {
            get {
                return ResourceManager.GetString("CommandSetCurrentSrramFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display settings ähnelt.
        /// </summary>
        public static string CommandSettings {
            get {
                return ResourceManager.GetString("CommandSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wipe previous console output ähnelt.
        /// </summary>
        public static string CommandWipeOutput {
            get {
                return ResourceManager.GetString("CommandWipeOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison ähnelt.
        /// </summary>
        public static string Comparison {
            get {
                return ResourceManager.GetString("Comparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison flags ähnelt.
        /// </summary>
        public static string ComparisonFlags {
            get {
                return ResourceManager.GetString("ComparisonFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comp ähnelt.
        /// </summary>
        public static string ComparisonShort {
            get {
                return ResourceManager.GetString("ComparisonShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison-SRAM file ähnelt.
        /// </summary>
        public static string ComparisonSramFile {
            get {
                return ResourceManager.GetString("ComparisonSramFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison SRAM filepath ähnelt.
        /// </summary>
        public static string ComparisonSramFilepath {
            get {
                return ResourceManager.GetString("ComparisonSramFilepath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot of Comparison file ähnelt.
        /// </summary>
        public static string ComparisonSramFileSaveSlot {
            get {
                return ResourceManager.GetString("ComparisonSramFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current ähnelt.
        /// </summary>
        public static string Current {
            get {
                return ResourceManager.GetString("Current", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Curr ähnelt.
        /// </summary>
        public static string CurrentShort {
            get {
                return ResourceManager.GetString("CurrentShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current-SRAM file ähnelt.
        /// </summary>
        public static string CurrentSramFile {
            get {
                return ResourceManager.GetString("CurrentSramFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current SRAM filepath ähnelt.
        /// </summary>
        public static string CurrentSramFilepath {
            get {
                return ResourceManager.GetString("CurrentSramFilepath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot of current file ähnelt.
        /// </summary>
        public static string CurrentSramFileSaveSlot {
            get {
                return ResourceManager.GetString("CurrentSramFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter command and press enter. ähnelt.
        /// </summary>
        public static string EnterCommand {
            get {
                return ResourceManager.GetString("EnterCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter index (0 to {0}) of the SRAM file to be overwritten (any other key to cancel): ähnelt.
        /// </summary>
        public static string EnterIndexOfSramFileToBeOverwrittenMaxIndexTemplate {
            get {
                return ResourceManager.GetString("EnterIndexOfSramFileToBeOverwrittenMaxIndexTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot open output file &quot;{0}&quot; for writing ähnelt.
        /// </summary>
        public static string ErrorCannotOpenOutputFileTemplate {
            get {
                return ResourceManager.GetString("ErrorCannotOpenOutputFileTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Command ({0}) needs to be implemented by caller. ähnelt.
        /// </summary>
        public static string ErrorCommandNotImplementedTemplate {
            get {
                return ResourceManager.GetString("ErrorCommandNotImplementedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The comparison file &quot;{0}&quot; has not been created yet. Please create one first. ähnelt.
        /// </summary>
        public static string ErrorComparisonFileDoesNotExist {
            get {
                return ResourceManager.GetString("ErrorComparisonFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot for comparison SRAM file can only be set if current SRAM file&apos;s save slot is set first. ähnelt.
        /// </summary>
        public static string ErrorComparisonSramSaveSlotSetButNotCurrentSramSaveSlot {
            get {
                return ResourceManager.GetString("ErrorComparisonSramSaveSlotSetButNotCurrentSramSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} comparison file must have .comp file extension. Did you just forget to quote the path? Was: {1} ähnelt.
        /// </summary>
        public static string ErrorCompSaveSlotFileIsNotCompFileTypeFilepathTemplate {
            get {
                return ResourceManager.GetString("ErrorCompSaveSlotFileIsNotCompFileTypeFilepathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} current file must have .srm file extension. Did you just forget to quote the path? Was: {1} ähnelt.
        /// </summary>
        public static string ErrorFileIsNotSrmFileTypeFilepathTemplate {
            get {
                return ResourceManager.GetString("ErrorFileIsNotSrmFileTypeFilepathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid index. Aborted. ähnelt.
        /// </summary>
        public static string ErrorInvalidIndex {
            get {
                return ResourceManager.GetString("ErrorInvalidIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ERROR: The program needs to be started with at least the path to current SRAM file as a parameter. Drag &apos;n&apos; drop can be used. ähnelt.
        /// </summary>
        public static string ErrorMissingPathArguments {
            get {
                return ResourceManager.GetString("ErrorMissingPathArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;{0}&quot; is an unknown command. To list all available commands enter ({1}). ähnelt.
        /// </summary>
        public static string ErrorNoValidCommandCmdTemplate {
            get {
                return ResourceManager.GetString("ErrorNoValidCommandCmdTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Operation aborted ähnelt.
        /// </summary>
        public static string ErrorOperationAborted {
            get {
                return ResourceManager.GetString("ErrorOperationAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter name value mismatch for: {0} ähnelt.
        /// </summary>
        public static string ErrorParamNameValueMissmatchTemplate {
            get {
                return ResourceManager.GetString("ErrorParamNameValueMissmatchTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export directory ähnelt.
        /// </summary>
        public static string ExportDirectory {
            get {
                return ResourceManager.GetString("ExportDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot offset ähnelt.
        /// </summary>
        public static string GameOffset {
            get {
                return ResourceManager.GetString("GameOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die game region ähnelt.
        /// </summary>
        public static string GameRegion {
            get {
                return ResourceManager.GetString("GameRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set Save slot {0} offset: ähnelt.
        /// </summary>
        public static string GetSaveSlotOffsetTemplate {
            get {
                return ResourceManager.GetString("GetSaveSlotOffsetTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set Save slot offset value: ähnelt.
        /// </summary>
        public static string GetSaveSlotOffsetValue {
            get {
                return ResourceManager.GetString("GetSaveSlotOffsetValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New ähnelt.
        /// </summary>
        public static string New {
            get {
                return ResourceManager.GetString("New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        public static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset ähnelt.
        /// </summary>
        public static string Offset {
            get {
                return ResourceManager.GetString("Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Old ähnelt.
        /// </summary>
        public static string Old {
            get {
                return ResourceManager.GetString("Old", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Would you like to create a new SRAM file instead overwriting the current file? Type 1 for creating a new file (recommended) or type 2 to overwrite the existing file. In the latter case make sure to have a backup created before. 1 = new, 2 = overwrite, 0 = abort ähnelt.
        /// </summary>
        public static string PromtCreateNewFileInsteadOfOverwriting {
            get {
                return ResourceManager.GetString("PromtCreateNewFileInsteadOfOverwriting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Queued commands ähnelt.
        /// </summary>
        public static string QueuedCommands {
            get {
                return ResourceManager.GetString("QueuedCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Same as current SRAM file&apos; save slot ähnelt.
        /// </summary>
        public static string SameAsCurrentSramFileSaveSlot {
            get {
                return ResourceManager.GetString("SameAsCurrentSramFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot ähnelt.
        /// </summary>
        public static string SaveSlot {
            get {
                return ResourceManager.GetString("SaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Section ähnelt.
        /// </summary>
        public static string Section {
            get {
                return ResourceManager.GetString("Section", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Non-save slot unknowns ähnelt.
        /// </summary>
        public static string SectionNonSaveSlotUnknowns {
            get {
                return ResourceManager.GetString("SectionNonSaveSlotUnknowns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All (knowns + unknowns) ähnelt.
        /// </summary>
        public static string SectionSaveSlotChangedTemplate {
            get {
                return ResourceManager.GetString("SectionSaveSlotChangedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set save slot (1-{0} or any other key for all save slots) to compare: ähnelt.
        /// </summary>
        public static string SetSaveSlotToCompareMaxTemplate {
            get {
                return ResourceManager.GetString("SetSaveSlotToCompareMaxTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set save slot (1-{0}): ähnelt.
        /// </summary>
        public static string SetSingleSaveSlotMaxTemplate {
            get {
                return ResourceManager.GetString("SetSingleSaveSlotMaxTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare non-save slot area ähnelt.
        /// </summary>
        public static string SettinComparegNonGameBuffer {
            get {
                return ResourceManager.GetString("SettinComparegNonGameBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare whole save slot area ähnelt.
        /// </summary>
        public static string SettingCompareWholeGameBuffer {
            get {
                return ResourceManager.GetString("SettingCompareWholeGameBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size ähnelt.
        /// </summary>
        public static string Size {
            get {
                return ResourceManager.GetString("Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SRAM ähnelt.
        /// </summary>
        public static string Sram {
            get {
                return ResourceManager.GetString("Sram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SRAM offset ähnelt.
        /// </summary>
        public static string SramOffset {
            get {
                return ResourceManager.GetString("SramOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New here? For command list use ({0}|?) or ({1}) for manual ähnelt.
        /// </summary>
        public static string StartMessage {
            get {
                return ResourceManager.GetString("StartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All save slots will be compared. ähnelt.
        /// </summary>
        public static string StatusAllSaveSlotsWillBeCompared {
            get {
                return ResourceManager.GetString("StatusAllSaveSlotsWillBeCompared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} bytes changed ähnelt.
        /// </summary>
        public static string StatusBytesChangedTemplate {
            get {
                return ResourceManager.GetString("StatusBytesChangedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare non-save slot area: ähnelt.
        /// </summary>
        public static string StatusCompareNonGameBuffer {
            get {
                return ResourceManager.GetString("StatusCompareNonGameBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare whole save slot area: ähnelt.
        /// </summary>
        public static string StatusCompareWholeGameBuffer {
            get {
                return ResourceManager.GetString("StatusCompareWholeGameBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current comparison exported to &quot;{0}&quot; ähnelt.
        /// </summary>
        public static string StatusCurrentComparisonExportedFilepathTemplate {
            get {
                return ResourceManager.GetString("StatusCurrentComparisonExportedFilepathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has been backed-up ähnelt.
        /// </summary>
        public static string StatusCurrentSramFileHasBeenBackedUpTemplate {
            get {
                return ResourceManager.GetString("StatusCurrentSramFileHasBeenBackedUpTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current SRAM file has been saved as comparison SRAM file ähnelt.
        /// </summary>
        public static string StatusCurrentSramFileHasBeenSaved {
            get {
                return ResourceManager.GetString("StatusCurrentSramFileHasBeenSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current SRAM file has been copied as {0}. ähnelt.
        /// </summary>
        public static string StatusCurrentSramHasBeenSavedAsFilepathTemplate {
            get {
                return ResourceManager.GetString("StatusCurrentSramHasBeenSavedAsFilepathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value at offset {0} is {1}. ähnelt.
        /// </summary>
        public static string StatusGetOffsetValueTemplate {
            get {
                return ResourceManager.GetString("StatusGetOffsetValueTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changed current SRAM File has been overwritten. File: {0}. ähnelt.
        /// </summary>
        public static string StatusModifiedSramFileHasBeenOverwrittenFilepathTemplate {
            get {
                return ResourceManager.GetString("StatusModifiedSramFileHasBeenOverwrittenFilepathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changed current SRAM File has been saved as {0}. ähnelt.
        /// </summary>
        public static string StatusModifiedSramFileHasBeenSavedAsFilepathTemplate {
            get {
                return ResourceManager.GetString("StatusModifiedSramFileHasBeenSavedAsFilepathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are currently no other SRAM files available. ähnelt.
        /// </summary>
        public static string StatusNoAvailableOtherSramFiles {
            get {
                return ResourceManager.GetString("StatusNoAvailableOtherSramFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Non-save slot unknowns: {0} bytes changed ähnelt.
        /// </summary>
        public static string StatusNonSaveSlotUnknownsBytesTemplate {
            get {
                return ResourceManager.GetString("StatusNonSaveSlotUnknownsBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No SRAM bytes changed ähnelt.
        /// </summary>
        public static string StatusNoSramBytesChanged {
            get {
                return ResourceManager.GetString("StatusNoSramBytesChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset value {0} will be set. ähnelt.
        /// </summary>
        public static string StatusOffsetValueWillBeUsedTemplate {
            get {
                return ResourceManager.GetString("StatusOffsetValueWillBeUsedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset {0} will be used. ähnelt.
        /// </summary>
        public static string StatusOffsetWillBeUsedTemplate {
            get {
                return ResourceManager.GetString("StatusOffsetWillBeUsedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All (knowns + unknowns): {0} bytes changed ähnelt.
        /// </summary>
        public static string StatusSaveSlotChangedBytesTemplate {
            get {
                return ResourceManager.GetString("StatusSaveSlotChangedBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value at offset {0} is now {1}. ähnelt.
        /// </summary>
        public static string StatusSetOffsetValueTemplate {
            get {
                return ResourceManager.GetString("StatusSetOffsetValueTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot {0} will be used. ähnelt.
        /// </summary>
        public static string StatusSetSingleSaveSlotMaxTemplate {
            get {
                return ResourceManager.GetString("StatusSetSingleSaveSlotMaxTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only save slot {0} will be compared. ähnelt.
        /// </summary>
        public static string StatusSingleSaveSlotWillBeComparedTemplate {
            get {
                return ResourceManager.GetString("StatusSingleSaveSlotWillBeComparedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} SRAM bytes changed ähnelt.
        /// </summary>
        public static string StatusSramChangedBytesTemplate {
            get {
                return ResourceManager.GetString("StatusSramChangedBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has been restored from backup ähnelt.
        /// </summary>
        public static string StatusSramFileHasBeenRestoredFromBackupTemplate {
            get {
                return ResourceManager.GetString("StatusSramFileHasBeenRestoredFromBackupTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target SRAM file has been backed up as {0}. ähnelt.
        /// </summary>
        public static string StatusTargetSramFileHasBeenBackedUpFilepathTemplate {
            get {
                return ResourceManager.GetString("StatusTargetSramFileHasBeenBackedUpFilepathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total: {0} bytes changed (outside save slot area) ähnelt.
        /// </summary>
        public static string StatusTotalDiffBytesTemplate {
            get {
                return ResourceManager.GetString("StatusTotalDiffBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknowns only: {0} bytes changed ähnelt.
        /// </summary>
        public static string StatusUnknownsChangedBytesTemplate {
            get {
                return ResourceManager.GetString("StatusUnknownsChangedBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknowns only ähnelt.
        /// </summary>
        public static string UnknownsOnly {
            get {
                return ResourceManager.GetString("UnknownsOnly", resourceCulture);
            }
        }
    }
}
