//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SramComparer.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SramComparer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All ähnelt.
        /// </summary>
        public static string All {
            get {
                return ResourceManager.GetString("All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This tool compares unknown buffers in SRAM file. ähnelt.
        /// </summary>
        public static string AppDescription {
            get {
                return ResourceManager.GetString("AppDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Steps: 
        ///1.1) Have a look into UnknownOffsets.txt (if existing) to see examples of what parts of SRAM structure are still 
        ///     considered &quot;unknown&quot;.
        ///1.2) Most emulators have the option to save the game&apos;s S-RAM automatically after a change occurs. 
        ///     Make sure this is enabled if existing. Otherwise you have manually ensure that the emulator updates 
        ///     the srm file.
        ///1.3) Start the tool by passing the game&apos;s srm filepath as first command parameter. The file can also be 
        ///     dragged onto the tool. [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string AppManualCommandsTemplate {
            get {
                return ResourceManager.GetString("AppManualCommandsTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backup ähnelt.
        /// </summary>
        public static string Backup {
            get {
                return ResourceManager.GetString("Backup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bytes ähnelt.
        /// </summary>
        public static string Bytes {
            get {
                return ResourceManager.GetString("Bytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change ähnelt.
        /// </summary>
        public static string ChangeShort {
            get {
                return ResourceManager.GetString("ChangeShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backup ähnelt.
        /// </summary>
        public static string CmdGroupBackup {
            get {
                return ResourceManager.GetString("CmdGroupBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison ähnelt.
        /// </summary>
        public static string CmdGroupComparison {
            get {
                return ResourceManager.GetString("CmdGroupComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display ähnelt.
        /// </summary>
        public static string CmdGroupDisplay {
            get {
                return ResourceManager.GetString("CmdGroupDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set game (save slot) ähnelt.
        /// </summary>
        public static string CmdGroupSetGame {
            get {
                return ResourceManager.GetString("CmdGroupSetGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Other ähnelt.
        /// </summary>
        public static string CmdOther {
            get {
                return ResourceManager.GetString("CmdOther", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back-up comparison SRAM file ähnelt.
        /// </summary>
        public static string CommandBackupComparisonFile {
            get {
                return ResourceManager.GetString("CommandBackupComparisonFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back-up current SRAM file ähnelt.
        /// </summary>
        public static string CommandBackupCurrentFile {
            get {
                return ResourceManager.GetString("CommandBackupCurrentFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare current SRAM file and with comparison file ähnelt.
        /// </summary>
        public static string CommandCompareFiles {
            get {
                return ResourceManager.GetString("CommandCompareFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display commands ähnelt.
        /// </summary>
        public static string CommandDisplayCommands {
            get {
                return ResourceManager.GetString("CommandDisplayCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display settings ähnelt.
        /// </summary>
        public static string CommandDisplaySettings {
            get {
                return ResourceManager.GetString("CommandDisplaySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export current comparison result ähnelt.
        /// </summary>
        public static string CommandExportComparisonResult {
            get {
                return ResourceManager.GetString("CommandExportComparisonResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare also non game buffer while comparison ähnelt.
        /// </summary>
        public static string CommandIncludeNonGameBufferComparison {
            get {
                return ResourceManager.GetString("CommandIncludeNonGameBufferComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare also whole game buffer while comparison ähnelt.
        /// </summary>
        public static string CommandIncludeWholeGameBufferComparison {
            get {
                return ResourceManager.GetString("CommandIncludeWholeGameBufferComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Manual ähnelt.
        /// </summary>
        public static string CommandManual {
            get {
                return ResourceManager.GetString("CommandManual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overwrite comparison file with current SRAM file ähnelt.
        /// </summary>
        public static string CommandOverwriteComparisonFile {
            get {
                return ResourceManager.GetString("CommandOverwriteComparisonFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Print offset value ähnelt.
        /// </summary>
        public static string CommandPrintOffsetValue {
            get {
                return ResourceManager.GetString("CommandPrintOffsetValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quit ähnelt.
        /// </summary>
        public static string CommandQuit {
            get {
                return ResourceManager.GetString("CommandQuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore comparison SRAM file from backup ähnelt.
        /// </summary>
        public static string CommandRestoreComparisonFile {
            get {
                return ResourceManager.GetString("CommandRestoreComparisonFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore current SRAM file from backup ähnelt.
        /// </summary>
        public static string CommandRestoreCurrentFile {
            get {
                return ResourceManager.GetString("CommandRestoreCurrentFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save changed offset value ähnelt.
        /// </summary>
        public static string CommandSaveOffsetValue {
            get {
                return ResourceManager.GetString("CommandSaveOffsetValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set comparison SRAM file&apos;s game (save slot) ähnelt.
        /// </summary>
        public static string CommandSetComparisonGame {
            get {
                return ResourceManager.GetString("CommandSetComparisonGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set current SRAM file&apos;s game (save slot) ähnelt.
        /// </summary>
        public static string CommandSetGame {
            get {
                return ResourceManager.GetString("CommandSetGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transfer SRAM data to similar game file ähnelt.
        /// </summary>
        public static string CommandTransferSramToSimilarGameFile {
            get {
                return ResourceManager.GetString("CommandTransferSramToSimilarGameFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wipe previous console output ähnelt.
        /// </summary>
        public static string CommandWipeOutput {
            get {
                return ResourceManager.GetString("CommandWipeOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison ähnelt.
        /// </summary>
        public static string Comparison {
            get {
                return ResourceManager.GetString("Comparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison flags ähnelt.
        /// </summary>
        public static string ComparisonFlags {
            get {
                return ResourceManager.GetString("ComparisonFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison SRAM file ähnelt.
        /// </summary>
        public static string ComparisonSramFile {
            get {
                return ResourceManager.GetString("ComparisonSramFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Old ähnelt.
        /// </summary>
        public static string CompShort {
            get {
                return ResourceManager.GetString("CompShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current ähnelt.
        /// </summary>
        public static string Current {
            get {
                return ResourceManager.GetString("Current", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current SRAM file ähnelt.
        /// </summary>
        public static string CurrentSramFile {
            get {
                return ResourceManager.GetString("CurrentSramFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New ähnelt.
        /// </summary>
        public static string CurrShort {
            get {
                return ResourceManager.GetString("CurrShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter command and press enter. ähnelt.
        /// </summary>
        public static string EnterCommand {
            get {
                return ResourceManager.GetString("EnterCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter index (0 to {0}) of the SRAM file to be overwritten (any other key to cancel): ähnelt.
        /// </summary>
        public static string EnterIndexOfSramFileToBeOverwrittenMaxIndexTemplate {
            get {
                return ResourceManager.GetString("EnterIndexOfSramFileToBeOverwrittenMaxIndexTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot open output file &quot;{0}&quot; for writing ähnelt.
        /// </summary>
        public static string ErrorCannotOpenOutputFileTemplate {
            get {
                return ResourceManager.GetString("ErrorCannotOpenOutputFileTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Command ({0}) needs to be implemented by caller. ähnelt.
        /// </summary>
        public static string ErrorCommandNotImplementedTemplate {
            get {
                return ResourceManager.GetString("ErrorCommandNotImplementedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Game (save slot) for comparison srm file can only be set if current srm file&apos;s game is set first. ähnelt.
        /// </summary>
        public static string ErrorComparisoGameSetButNotGame {
            get {
                return ResourceManager.GetString("ErrorComparisoGameSetButNotGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The comparison file &quot;{0}&quot; has not been created yet. ähnelt.
        /// </summary>
        public static string ErrorComparisonFileDoesNotExist {
            get {
                return ResourceManager.GetString("ErrorComparisonFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} comparison file must have .comp file extension. Did you just forget to quote the path? Was: {1} ähnelt.
        /// </summary>
        public static string ErrorCompGameFileIsNotCompFileTypeFilepathTemplate {
            get {
                return ResourceManager.GetString("ErrorCompGameFileIsNotCompFileTypeFilepathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} current file must have .srm file extension. Did you just forget to quote the path? Was: {1} ähnelt.
        /// </summary>
        public static string ErrorGameFileIsNotSrmFileTypeFilepathTemplate {
            get {
                return ResourceManager.GetString("ErrorGameFileIsNotSrmFileTypeFilepathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid index. Aborted. ähnelt.
        /// </summary>
        public static string ErrorInvalidIndex {
            get {
                return ResourceManager.GetString("ErrorInvalidIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ERROR: The programm needs to be started with at least one argument: &quot;{CURRENT_SRM_FILEPATH}&quot; ähnelt.
        /// </summary>
        public static string ErrorMissingPathArguments {
            get {
                return ResourceManager.GetString("ErrorMissingPathArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;{0}&quot; is no valid command. ähnelt.
        /// </summary>
        public static string ErrorNoValidCommand {
            get {
                return ResourceManager.GetString("ErrorNoValidCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Operation aborted ähnelt.
        /// </summary>
        public static string ErrorOperationAborted {
            get {
                return ResourceManager.GetString("ErrorOperationAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter name value missmatch for: {0} ähnelt.
        /// </summary>
        public static string ErrorParamNameValueMissmatchTemplate {
            get {
                return ResourceManager.GetString("ErrorParamNameValueMissmatchTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Game ähnelt.
        /// </summary>
        public static string Game {
            get {
                return ResourceManager.GetString("Game", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Game offset ähnelt.
        /// </summary>
        public static string GameOffset {
            get {
                return ResourceManager.GetString("GameOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        public static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset ähnelt.
        /// </summary>
        public static string Offset {
            get {
                return ResourceManager.GetString("Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Would you like to create a new SRAM file instead overwriting the current file? Type 1 for creating a new file (recommended) or type 2 to overwrite the existing file. In this case make sure to have a backup created before. 1 = new, 2 = overwrite, 0 = abort ähnelt.
        /// </summary>
        public static string PromtCreateNewFileInsteadOfOverwriting {
            get {
                return ResourceManager.GetString("PromtCreateNewFileInsteadOfOverwriting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Queued commands ähnelt.
        /// </summary>
        public static string QueuedCommands {
            get {
                return ResourceManager.GetString("QueuedCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Same as current game ähnelt.
        /// </summary>
        public static string SameAsCurrentGame {
            get {
                return ResourceManager.GetString("SameAsCurrentGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Section ähnelt.
        /// </summary>
        public static string Section {
            get {
                return ResourceManager.GetString("Section", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All (knowns + unknowns) ähnelt.
        /// </summary>
        public static string SectionGameChangedTemplate {
            get {
                return ResourceManager.GetString("SectionGameChangedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Non Game unknowns ähnelt.
        /// </summary>
        public static string SectionNonGameUnknowns {
            get {
                return ResourceManager.GetString("SectionNonGameUnknowns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set Game offset: ähnelt.
        /// </summary>
        public static string SetGameOffsetTemplate {
            get {
                return ResourceManager.GetString("SetGameOffsetTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set Game offset value: ähnelt.
        /// </summary>
        public static string SetGameOffsetValue {
            get {
                return ResourceManager.GetString("SetGameOffsetValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set Game (1-{0} or any other key for all games) to compare: ähnelt.
        /// </summary>
        public static string SetGameToCompareMaxTemplate {
            get {
                return ResourceManager.GetString("SetGameToCompareMaxTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set Game (1-{0}): ähnelt.
        /// </summary>
        public static string SetSingleGameMaxTemplate {
            get {
                return ResourceManager.GetString("SetSingleGameMaxTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare non-game buffer ähnelt.
        /// </summary>
        public static string SettinComparegNonGameBuffer {
            get {
                return ResourceManager.GetString("SettinComparegNonGameBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare whole game buffer ähnelt.
        /// </summary>
        public static string SettingCompareWholeGameBuffer {
            get {
                return ResourceManager.GetString("SettingCompareWholeGameBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison game filepath ähnelt.
        /// </summary>
        public static string SettingComparisonGameFilepath {
            get {
                return ResourceManager.GetString("SettingComparisonGameFilepath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison game (to compare) ähnelt.
        /// </summary>
        public static string SettingComparisonGameToCompare {
            get {
                return ResourceManager.GetString("SettingComparisonGameToCompare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current game filepath ähnelt.
        /// </summary>
        public static string SettingCurrentGameFilepath {
            get {
                return ResourceManager.GetString("SettingCurrentGameFilepath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current game (to compare) ähnelt.
        /// </summary>
        public static string SettingCurrentGameToCompare {
            get {
                return ResourceManager.GetString("SettingCurrentGameToCompare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export directory ähnelt.
        /// </summary>
        public static string SettingExportDirectory {
            get {
                return ResourceManager.GetString("SettingExportDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Game region ähnelt.
        /// </summary>
        public static string SettingRegion {
            get {
                return ResourceManager.GetString("SettingRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size ähnelt.
        /// </summary>
        public static string Size {
            get {
                return ResourceManager.GetString("Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SRAM ähnelt.
        /// </summary>
        public static string Sram {
            get {
                return ResourceManager.GetString("Sram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sram offset ähnelt.
        /// </summary>
        public static string SramOffset {
            get {
                return ResourceManager.GetString("SramOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New here? Type ({0}|?) for command list or ({1}) for manual and press enter ähnelt.
        /// </summary>
        public static string StartMessage {
            get {
                return ResourceManager.GetString("StartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All games will be compared. ähnelt.
        /// </summary>
        public static string StatusAllGamesWillBeCompared {
            get {
                return ResourceManager.GetString("StatusAllGamesWillBeCompared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} bytes changed ähnelt.
        /// </summary>
        public static string StatusBytesChangedTemplate {
            get {
                return ResourceManager.GetString("StatusBytesChangedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changed current SRAM File has been overwritten. File: {0}. ähnelt.
        /// </summary>
        public static string StatusChangedSramFileHasBeenOverwrittenFilepathTemplate {
            get {
                return ResourceManager.GetString("StatusChangedSramFileHasBeenOverwrittenFilepathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changed current SRAM File has been saved as {0}. ähnelt.
        /// </summary>
        public static string StatusChangedSramFileHasBeenSavedAsFilepathTemplate {
            get {
                return ResourceManager.GetString("StatusChangedSramFileHasBeenSavedAsFilepathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare non-game buffer: ähnelt.
        /// </summary>
        public static string StatusCompareNonGameBuffer {
            get {
                return ResourceManager.GetString("StatusCompareNonGameBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare whole game buffer: ähnelt.
        /// </summary>
        public static string StatusCompareWholeGameBuffer {
            get {
                return ResourceManager.GetString("StatusCompareWholeGameBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current comparison exported to &quot;{0}&quot; ähnelt.
        /// </summary>
        public static string StatusCurrentComparisonExportedFilepathTemplate {
            get {
                return ResourceManager.GetString("StatusCurrentComparisonExportedFilepathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has been backed up ähnelt.
        /// </summary>
        public static string StatusCurrentSramFileHasBeenBackedUpTemplate {
            get {
                return ResourceManager.GetString("StatusCurrentSramFileHasBeenBackedUpTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current SRAM file has been saved as comparison SRAM file ähnelt.
        /// </summary>
        public static string StatusCurrentSramFileHasBeenSaved {
            get {
                return ResourceManager.GetString("StatusCurrentSramFileHasBeenSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current SRAM file has been transferred to {0}. ähnelt.
        /// </summary>
        public static string StatusCurrentSramHasBeenSavedAsFilepathTemplate {
            get {
                return ResourceManager.GetString("StatusCurrentSramHasBeenSavedAsFilepathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All (knowns + unknowns):   {0} bytes changed ähnelt.
        /// </summary>
        public static string StatusGameChangedBytesTemplate {
            get {
                return ResourceManager.GetString("StatusGameChangedBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknowns only: {0} bytes changed ähnelt.
        /// </summary>
        public static string StatusGameUnknownsChangedBytesTemplate {
            get {
                return ResourceManager.GetString("StatusGameUnknownsChangedBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only current game {0} will be compared. ähnelt.
        /// </summary>
        public static string StatusGameWillBeComparedTemplate {
            get {
                return ResourceManager.GetString("StatusGameWillBeComparedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value at offset {0} is {1}. ähnelt.
        /// </summary>
        public static string StatusGetOffsetValueTemplate {
            get {
                return ResourceManager.GetString("StatusGetOffsetValueTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are currently no other SRAM files available. ähnelt.
        /// </summary>
        public static string StatusNoAvailableOtherSramFiles {
            get {
                return ResourceManager.GetString("StatusNoAvailableOtherSramFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Non game unknowns: {0} bytes changed ähnelt.
        /// </summary>
        public static string StatusNonGameUnknownsBytesTemplate {
            get {
                return ResourceManager.GetString("StatusNonGameUnknownsBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No SRAM bytes changed ähnelt.
        /// </summary>
        public static string StatusNoSramBytesChanged {
            get {
                return ResourceManager.GetString("StatusNoSramBytesChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset value {0} will be set. ähnelt.
        /// </summary>
        public static string StatusOffsetValueWillBeUsedTemplate {
            get {
                return ResourceManager.GetString("StatusOffsetValueWillBeUsedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset {0} will be used. ähnelt.
        /// </summary>
        public static string StatusOffsetWillBeUsedTemplate {
            get {
                return ResourceManager.GetString("StatusOffsetWillBeUsedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value at offset {0} is {1}. ähnelt.
        /// </summary>
        public static string StatusSetOffsetValueTemplate {
            get {
                return ResourceManager.GetString("StatusSetOffsetValueTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Game {0} will be used. ähnelt.
        /// </summary>
        public static string StatusSetSingleGameMaxTemplate {
            get {
                return ResourceManager.GetString("StatusSetSingleGameMaxTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} SRAM bytes changed ähnelt.
        /// </summary>
        public static string StatusSramChangedBytesTemplate {
            get {
                return ResourceManager.GetString("StatusSramChangedBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has been restored from backup ähnelt.
        /// </summary>
        public static string StatusSramFileHasBeenRestoredFromBackupTemplate {
            get {
                return ResourceManager.GetString("StatusSramFileHasBeenRestoredFromBackupTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target SRAM file has been backed up as {0}. ähnelt.
        /// </summary>
        public static string StatusTargetSramFileHasBeenBackedUpFilepathTemplate {
            get {
                return ResourceManager.GetString("StatusTargetSramFileHasBeenBackedUpFilepathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total: {0} bytes changed (outside game) ähnelt.
        /// </summary>
        public static string StatusTotalDiffBytesTemplate {
            get {
                return ResourceManager.GetString("StatusTotalDiffBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknowns only ähnelt.
        /// </summary>
        public static string UnknownsOnly {
            get {
                return ResourceManager.GetString("UnknownsOnly", resourceCulture);
            }
        }
    }
}
