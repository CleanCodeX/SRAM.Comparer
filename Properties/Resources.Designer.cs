//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SramComparer.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SramComparer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All ähnelt.
        /// </summary>
        public static string All {
            get {
                return ResourceManager.GetString("All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This tool compares unknown areas in SRAM. ähnelt.
        /// </summary>
        public static string AppDescription {
            get {
                return ResourceManager.GetString("AppDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backup ähnelt.
        /// </summary>
        public static string Backup {
            get {
                return ResourceManager.GetString("Backup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die bytes ähnelt.
        /// </summary>
        public static string Bytes {
            get {
                return ResourceManager.GetString("Bytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change ähnelt.
        /// </summary>
        public static string ChangeShort {
            get {
                return ResourceManager.GetString("ChangeShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backup ähnelt.
        /// </summary>
        public static string CmdGroupBackup {
            get {
                return ResourceManager.GetString("CmdGroupBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison ähnelt.
        /// </summary>
        public static string CmdGroupComparison {
            get {
                return ResourceManager.GetString("CmdGroupComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Config ähnelt.
        /// </summary>
        public static string CmdGroupConfig {
            get {
                return ResourceManager.GetString("CmdGroupConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display ähnelt.
        /// </summary>
        public static string CmdGroupDisplay {
            get {
                return ResourceManager.GetString("CmdGroupDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language ähnelt.
        /// </summary>
        public static string CmdGroupLanguage {
            get {
                return ResourceManager.GetString("CmdGroupLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Miscellaneous ähnelt.
        /// </summary>
        public static string CmdGroupMisc {
            get {
                return ResourceManager.GetString("CmdGroupMisc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set save slot ähnelt.
        /// </summary>
        public static string CmdGroupSetsSaveSlot {
            get {
                return ResourceManager.GetString("CmdGroupSetsSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Colorize output ähnelt.
        /// </summary>
        public static string ColorizeOutput {
            get {
                return ResourceManager.GetString("ColorizeOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back-up comparison-file ähnelt.
        /// </summary>
        public static string CommandBackupComparisonFile {
            get {
                return ResourceManager.GetString("CommandBackupComparisonFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back-up current-file ähnelt.
        /// </summary>
        public static string CommandBackupCurrentFile {
            get {
                return ResourceManager.GetString("CommandBackupCurrentFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wipe previous console output ähnelt.
        /// </summary>
        public static string CommandClearOutput {
            get {
                return ResourceManager.GetString("CommandClearOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare current-file with comparison file ähnelt.
        /// </summary>
        public static string CommandCompareFiles {
            get {
                return ResourceManager.GetString("CommandCompareFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set comparison result language ähnelt.
        /// </summary>
        public static string CommandComparisonResultLanguage {
            get {
                return ResourceManager.GetString("CommandComparisonResultLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display settings ähnelt.
        /// </summary>
        public static string CommandConfig {
            get {
                return ResourceManager.GetString("CommandConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modify (and save) offset value ähnelt.
        /// </summary>
        public static string CommandEditOffset {
            get {
                return ResourceManager.GetString("CommandEditOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export current comparison result ähnelt.
        /// </summary>
        public static string CommandExportComparisonResult {
            get {
                return ResourceManager.GetString("CommandExportComparisonResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Guide (savestate) ähnelt.
        /// </summary>
        public static string CommandGuideSavestate {
            get {
                return ResourceManager.GetString("CommandGuideSavestate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Guide (srm) ähnelt.
        /// </summary>
        public static string CommandGuideSrm {
            get {
                return ResourceManager.GetString("CommandGuideSrm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set UI-language ähnelt.
        /// </summary>
        public static string CommandLanguage {
            get {
                return ResourceManager.GetString("CommandLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List commands ähnelt.
        /// </summary>
        public static string CommandListCommands {
            get {
                return ResourceManager.GetString("CommandListCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load config ähnelt.
        /// </summary>
        public static string CommandLoadConfig {
            get {
                return ResourceManager.GetString("CommandLoadConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add non-slot byte-by-byte comparison ähnelt.
        /// </summary>
        public static string CommandNonSlotByteByByteComparison {
            get {
                return ResourceManager.GetString("CommandNonSlotByteByByteComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display offset value ähnelt.
        /// </summary>
        public static string CommandOffset {
            get {
                return ResourceManager.GetString("CommandOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overwrite (or create) comparison file with current-file ähnelt.
        /// </summary>
        public static string CommandOverwriteComparisonFile {
            get {
                return ResourceManager.GetString("CommandOverwriteComparisonFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quit ähnelt.
        /// </summary>
        public static string CommandQuit {
            get {
                return ResourceManager.GetString("CommandQuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore comparison-file from backup ähnelt.
        /// </summary>
        public static string CommandRestoreComparisonFile {
            get {
                return ResourceManager.GetString("CommandRestoreComparisonFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore current-file from backup ähnelt.
        /// </summary>
        public static string CommandRestoreCurrentFile {
            get {
                return ResourceManager.GetString("CommandRestoreCurrentFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save config ähnelt.
        /// </summary>
        public static string CommandSaveConfig {
            get {
                return ResourceManager.GetString("CommandSaveConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save current-file with other game file&apos;s name ähnelt.
        /// </summary>
        public static string CommandSaveCurrentFileWithOtherFileName {
            get {
                return ResourceManager.GetString("CommandSaveCurrentFileWithOtherFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set comparison file&apos;s save slot ähnelt.
        /// </summary>
        public static string CommandSetComparisonFileSaveSlot {
            get {
                return ResourceManager.GetString("CommandSetComparisonFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set current file&apos;s save slot ähnelt.
        /// </summary>
        public static string CommandSetCurrentSrramFileSaveSlot {
            get {
                return ResourceManager.GetString("CommandSetCurrentSrramFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add slot byte-by-byte comparison ähnelt.
        /// </summary>
        public static string CommandSlotByteByBytesComparison {
            get {
                return ResourceManager.GetString("CommandSlotByteByBytesComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison ähnelt.
        /// </summary>
        public static string Comparison {
            get {
                return ResourceManager.GetString("Comparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison file ähnelt.
        /// </summary>
        public static string ComparisonFile {
            get {
                return ResourceManager.GetString("ComparisonFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison filepath ähnelt.
        /// </summary>
        public static string ComparisonFilePath {
            get {
                return ResourceManager.GetString("ComparisonFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot (Comparison file) ähnelt.
        /// </summary>
        public static string ComparisonFileSaveSlot {
            get {
                return ResourceManager.GetString("ComparisonFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison flags ähnelt.
        /// </summary>
        public static string ComparisonFlags {
            get {
                return ResourceManager.GetString("ComparisonFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparison result language ähnelt.
        /// </summary>
        public static string ComparisonResultLanguage {
            get {
                return ResourceManager.GetString("ComparisonResultLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comp ähnelt.
        /// </summary>
        public static string ComparisonShort {
            get {
                return ResourceManager.GetString("ComparisonShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Config file path ähnelt.
        /// </summary>
        public static string ConfigFilePath {
            get {
                return ResourceManager.GetString("ConfigFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current ähnelt.
        /// </summary>
        public static string Current {
            get {
                return ResourceManager.GetString("Current", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current file ähnelt.
        /// </summary>
        public static string CurrentFile {
            get {
                return ResourceManager.GetString("CurrentFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current filepath ähnelt.
        /// </summary>
        public static string CurrentFilePath {
            get {
                return ResourceManager.GetString("CurrentFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot (current file) ähnelt.
        /// </summary>
        public static string CurrentFileSaveSlot {
            get {
                return ResourceManager.GetString("CurrentFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Curr ähnelt.
        /// </summary>
        public static string CurrentShort {
            get {
                return ResourceManager.GetString("CurrentShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter command and press enter. ähnelt.
        /// </summary>
        public static string EnterCommand {
            get {
                return ResourceManager.GetString("EnterCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter index (0 to {0}) of the file to be overwritten (any other key to cancel): ähnelt.
        /// </summary>
        public static string EnterIndexOfFileToBeOverwrittenMaxIndexTemplate {
            get {
                return ResourceManager.GetString("EnterIndexOfFileToBeOverwrittenMaxIndexTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot open output file &quot;{0}&quot; for writing ähnelt.
        /// </summary>
        public static string ErrorCannotOpenOutputFileTemplate {
            get {
                return ResourceManager.GetString("ErrorCannotOpenOutputFileTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Command (overwrite) needs to be implemented by caller. ähnelt.
        /// </summary>
        public static string ErrorCommandNotImplementedTemplate {
            get {
                return ResourceManager.GetString("ErrorCommandNotImplementedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The comparison file &quot;{0}&quot; has not been created yet. Please create one first. ähnelt.
        /// </summary>
        public static string ErrorComparisonFileDoesNotExist {
            get {
                return ResourceManager.GetString("ErrorComparisonFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot for comparison-file can only be set if current file&apos;s save slot is set first. ähnelt.
        /// </summary>
        public static string ErrorComparisonFileSaveSlotSetButNotCurrentFileSaveSlot {
            get {
                return ResourceManager.GetString("ErrorComparisonFileSaveSlotSetButNotCurrentFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The ({0}) file: [{1}] has an unsupported file extension. Did you just forget to quote the path? Supported file extensions are: {2} ähnelt.
        /// </summary>
        public static string ErrorInvalidFileExtensionTemplate {
            get {
                return ResourceManager.GetString("ErrorInvalidFileExtensionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid index. Aborted. ähnelt.
        /// </summary>
        public static string ErrorInvalidIndex {
            get {
                return ResourceManager.GetString("ErrorInvalidIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ERROR: The program needs to be started with at least the path to current save file as a parameter. Drag &apos;n&apos; drop can be used. ähnelt.
        /// </summary>
        public static string ErrorMissingPathArguments {
            get {
                return ResourceManager.GetString("ErrorMissingPathArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;{0}&quot; is an unknown command. To list all available commands enter ({1}). ähnelt.
        /// </summary>
        public static string ErrorNoValidCommandCmdTemplate {
            get {
                return ResourceManager.GetString("ErrorNoValidCommandCmdTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Operation aborted ähnelt.
        /// </summary>
        public static string ErrorOperationAborted {
            get {
                return ResourceManager.GetString("ErrorOperationAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter name value mismatch for: {0} ähnelt.
        /// </summary>
        public static string ErrorParamNameValueMissmatchTemplate {
            get {
                return ResourceManager.GetString("ErrorParamNameValueMissmatchTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export directory ähnelt.
        /// </summary>
        public static string ExportDirectory {
            get {
                return ResourceManager.GetString("ExportDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Game region ähnelt.
        /// </summary>
        public static string GameRegion {
            get {
                return ResourceManager.GetString("GameRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set Save slot {0} offset: ähnelt.
        /// </summary>
        public static string GetSaveSlotOffsetTemplate {
            get {
                return ResourceManager.GetString("GetSaveSlotOffsetTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set Save slot offset value: ähnelt.
        /// </summary>
        public static string GetSaveSlotOffsetValue {
            get {
                return ResourceManager.GetString("GetSaveSlotOffsetValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New ähnelt.
        /// </summary>
        public static string New {
            get {
                return ResourceManager.GetString("New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no guide available ähnelt.
        /// </summary>
        public static string NoGuideAvailable {
            get {
                return ResourceManager.GetString("NoGuideAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        public static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Non-slot byte-by-byte comparison ähnelt.
        /// </summary>
        public static string NonSlotByteByByteComparison {
            get {
                return ResourceManager.GetString("NonSlotByteByByteComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset ähnelt.
        /// </summary>
        public static string Offset {
            get {
                return ResourceManager.GetString("Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Old ähnelt.
        /// </summary>
        public static string Old {
            get {
                return ResourceManager.GetString("Old", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Would you like to create a new file instead of overwriting the current file? Type 1 for creating a new file (recommended) or type 2 to overwrite the existing file. In the latter case make sure to have a backup created before. 1 = new, 2 = overwrite, 0 = abort ähnelt.
        /// </summary>
        public static string PromtCreateNewFileInsteadOfOverwriting {
            get {
                return ResourceManager.GetString("PromtCreateNewFileInsteadOfOverwriting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Queued commands ähnelt.
        /// </summary>
        public static string QueuedCommands {
            get {
                return ResourceManager.GetString("QueuedCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Same ähnelt.
        /// </summary>
        public static string Same {
            get {
                return ResourceManager.GetString("Same", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Same as current file&apos;s save slot ähnelt.
        /// </summary>
        public static string SameAsCurrentFileSaveSlot {
            get {
                return ResourceManager.GetString("SameAsCurrentFileSaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot ähnelt.
        /// </summary>
        public static string SaveSlot {
            get {
                return ResourceManager.GetString("SaveSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot offset ähnelt.
        /// </summary>
        public static string SaveSlotOffset {
            get {
                return ResourceManager.GetString("SaveSlotOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Section ähnelt.
        /// </summary>
        public static string Section {
            get {
                return ResourceManager.GetString("Section", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Non-save slot unknowns ähnelt.
        /// </summary>
        public static string SectionNonSaveSlotUnknowns {
            get {
                return ResourceManager.GetString("SectionNonSaveSlotUnknowns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All (knowns + unknowns) ähnelt.
        /// </summary>
        public static string SectionSaveSlotChangedTemplate {
            get {
                return ResourceManager.GetString("SectionSaveSlotChangedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the comparison result language (e.g. &apos;en&apos; for English - without quotes). An empty input resets the setting. ähnelt.
        /// </summary>
        public static string SetComparionResultLanguage {
            get {
                return ResourceManager.GetString("SetComparionResultLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set save slot (1-{0} or any other key for all save slots) to compare: ähnelt.
        /// </summary>
        public static string SetSaveSlotToCompareMaxTemplate {
            get {
                return ResourceManager.GetString("SetSaveSlotToCompareMaxTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set save slot (1-{0}): ähnelt.
        /// </summary>
        public static string SetSingleSaveSlotMaxTemplate {
            get {
                return ResourceManager.GetString("SetSingleSaveSlotMaxTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare non-save slot area ähnelt.
        /// </summary>
        public static string SettinComparegNonGameBuffer {
            get {
                return ResourceManager.GetString("SettinComparegNonGameBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare whole save slot area ähnelt.
        /// </summary>
        public static string SettingCompareWholeGameBuffer {
            get {
                return ResourceManager.GetString("SettingCompareWholeGameBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the UI language (e.g. &apos;en&apos; for English - without quotes). An empty input resets the setting. ähnelt.
        /// </summary>
        public static string SetUILanguage {
            get {
                return ResourceManager.GetString("SetUILanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size ähnelt.
        /// </summary>
        public static string Size {
            get {
                return ResourceManager.GetString("Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Slot byte-by-byte comparison ähnelt.
        /// </summary>
        public static string SlotByteByByteComparison {
            get {
                return ResourceManager.GetString("SlotByteByByteComparison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SRAM ähnelt.
        /// </summary>
        public static string Sram {
            get {
                return ResourceManager.GetString("Sram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SRAM offset ähnelt.
        /// </summary>
        public static string SramOffset {
            get {
                return ResourceManager.GetString("SramOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New here? For command list use ({0}|?) or ({1}) for manual. ähnelt.
        /// </summary>
        public static string StartMessage {
            get {
                return ResourceManager.GetString("StartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All save slots will be compared. ähnelt.
        /// </summary>
        public static string StatusAllSaveSlotsWillBeCompared {
            get {
                return ResourceManager.GetString("StatusAllSaveSlotsWillBeCompared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} bytes changed. ähnelt.
        /// </summary>
        public static string StatusBytesChangedTemplate {
            get {
                return ResourceManager.GetString("StatusBytesChangedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Config file [{0}] has been saved. ähnelt.
        /// </summary>
        public static string StatusConfigFileHasBeenSavedTemplate {
            get {
                return ResourceManager.GetString("StatusConfigFileHasBeenSavedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current comparison exported to &quot;{0}&quot;. ähnelt.
        /// </summary>
        public static string StatusCurrentComparisonExportedFilePathTemplate {
            get {
                return ResourceManager.GetString("StatusCurrentComparisonExportedFilePathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has been backed-up. ähnelt.
        /// </summary>
        public static string StatusCurrentFileHasBeenBackedUpTemplate {
            get {
                return ResourceManager.GetString("StatusCurrentFileHasBeenBackedUpTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current file has been saved as comparison file. ähnelt.
        /// </summary>
        public static string StatusCurrentFileHasBeenSaved {
            get {
                return ResourceManager.GetString("StatusCurrentFileHasBeenSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current file has been copied as {0}. ähnelt.
        /// </summary>
        public static string StatusCurrentHasBeenSavedAsFilePathTemplate {
            get {
                return ResourceManager.GetString("StatusCurrentHasBeenSavedAsFilePathTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has been restored from backup. ähnelt.
        /// </summary>
        public static string StatusFileHasBeenRestoredFromBackupTemplate {
            get {
                return ResourceManager.GetString("StatusFileHasBeenRestoredFromBackupTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value at offset {0} is currently {1}. ähnelt.
        /// </summary>
        public static string StatusGetOffsetValueTemplate {
            get {
                return ResourceManager.GetString("StatusGetOffsetValueTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edited current file has been overwritten. File: {0}. ähnelt.
        /// </summary>
        public static string StatusModifiedFileHasBeenOverwrittenTemplate {
            get {
                return ResourceManager.GetString("StatusModifiedFileHasBeenOverwrittenTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edited current file has been saved as {0}. ähnelt.
        /// </summary>
        public static string StatusModifiedFileHasBeenSavedAsTemplate {
            get {
                return ResourceManager.GetString("StatusModifiedFileHasBeenSavedAsTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are currently no other files with same file extension available. ähnelt.
        /// </summary>
        public static string StatusNoAvailableOtherFiles {
            get {
                return ResourceManager.GetString("StatusNoAvailableOtherFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown non-save slot area: {0} bytes changed. ähnelt.
        /// </summary>
        public static string StatusNonSaveSlotUnknownsBytesTemplate {
            get {
                return ResourceManager.GetString("StatusNonSaveSlotUnknownsBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No bytes changed ähnelt.
        /// </summary>
        public static string StatusNoSramBytesChanged {
            get {
                return ResourceManager.GetString("StatusNoSramBytesChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset value {0} will bFe set. ähnelt.
        /// </summary>
        public static string StatusOffsetValueWillBeUsedTemplate {
            get {
                return ResourceManager.GetString("StatusOffsetValueWillBeUsedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset {0} will be used. ähnelt.
        /// </summary>
        public static string StatusOffsetWillBeUsedTemplate {
            get {
                return ResourceManager.GetString("StatusOffsetWillBeUsedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All (knowns + unknowns): {0} bytes changed. ähnelt.
        /// </summary>
        public static string StatusSaveSlotChangedBytesTemplate {
            get {
                return ResourceManager.GetString("StatusSaveSlotChangedBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value at offset {0} is now {1}. ähnelt.
        /// </summary>
        public static string StatusSetOffsetValueTemplate {
            get {
                return ResourceManager.GetString("StatusSetOffsetValueTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save slot {0} will be used. ähnelt.
        /// </summary>
        public static string StatusSetSingleSaveSlotMaxTemplate {
            get {
                return ResourceManager.GetString("StatusSetSingleSaveSlotMaxTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only save slot {0} will be compared. ähnelt.
        /// </summary>
        public static string StatusSingleSaveSlotWillBeComparedTemplate {
            get {
                return ResourceManager.GetString("StatusSingleSaveSlotWillBeComparedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} bytes changed. ähnelt.
        /// </summary>
        public static string StatusSramChangedBytesTemplate {
            get {
                return ResourceManager.GetString("StatusSramChangedBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target file has been backed up as {0}. ähnelt.
        /// </summary>
        public static string StatusTargetFileHasBeenBackedUpTemplate {
            get {
                return ResourceManager.GetString("StatusTargetFileHasBeenBackedUpTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total: {0} bytes changed (outside save slot area). ähnelt.
        /// </summary>
        public static string StatusTotalDiffBytesTemplate {
            get {
                return ResourceManager.GetString("StatusTotalDiffBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current save slot {0} will be compared with comparison save slot {1}. ähnelt.
        /// </summary>
        public static string StatusTwoDifferentSaveSlotsWillBeComparedTemplate {
            get {
                return ResourceManager.GetString("StatusTwoDifferentSaveSlotsWillBeComparedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknowns only: {0} bytes changed. ähnelt.
        /// </summary>
        public static string StatusUnknownsChangedBytesTemplate {
            get {
                return ResourceManager.GetString("StatusUnknownsChangedBytesTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UI language ähnelt.
        /// </summary>
        public static string UILanguage {
            get {
                return ResourceManager.GetString("UILanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknowns only ähnelt.
        /// </summary>
        public static string UnknownAreasOnly {
            get {
                return ResourceManager.GetString("UnknownAreasOnly", resourceCulture);
            }
        }
    }
}
