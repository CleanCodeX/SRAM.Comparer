<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
  <data name="ReversedByteOrder" xml:space="preserve">
    <value>reversed byte order</value>
  </data>
  <data name="ErrorMissingPathArguments" xml:space="preserve">
    <value>ERROR: The programm needs to be started with at least one argument: "{CURRENT_SRM_FILEPATH}"</value>
  </data>
  <data name="StatusBytesChangedTemplate" xml:space="preserve">
    <value>{0} bytes changed</value>
  </data>
  <data name="SettingCurrentGameToCompare" xml:space="preserve">
    <value>Current game (to compare)</value>
  </data>
  <data name="SettingComparisonGameToCompare" xml:space="preserve">
    <value>Comparison game (to compare)</value>
  </data>
  <data name="SettingRegion" xml:space="preserve">
    <value>Game region</value>
  </data>
  <data name="ComparisonFlags" xml:space="preserve">
    <value>Comparison flags</value>
  </data>
  <data name="SettingNonGameBuffer" xml:space="preserve">
    <value>Compare non-game buffer</value>
  </data>
  <data name="SettingCompareWholeGameBuffer" xml:space="preserve">
    <value>Compare whole game buffer</value>
  </data>
  <data name="SettingComparisonGameFilepath" xml:space="preserve">
    <value>Comparison game filepath</value>
  </data>
  <data name="SettingExportDirectory" xml:space="preserve">
    <value>Export directory</value>
  </data>
  <data name="SettingCurrentGameFilepath" xml:space="preserve">
    <value>Current game filepath</value>
  </data>
  <data name="StatusGameWillBeComparedTemplate" xml:space="preserve">
    <value>Only game {0} will be compared.</value>
  </data>
  <data name="StatusAllGamesWillBeCompared" xml:space="preserve">
    <value>All games will be compared.</value>
  </data>
  <data name="GameOffset" xml:space="preserve">
    <value>Game offset</value>
  </data>
  <data name="SramOffset" xml:space="preserve">
    <value>Sram offset</value>
  </data>
  <data name="ErrorCannotOpenOutputFileTemplate" xml:space="preserve">
    <value>Cannot open output file "{0}" for writing</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>This tool compares unknown buffers in SRAM file.</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="StatusCompareWholeGameBuffer" xml:space="preserve">
    <value>Compare whole game buffer:</value>
  </data>
  <data name="StatusCompareNonGameBuffer" xml:space="preserve">
    <value>Compare non-game buffer:</value>
  </data>
  <data name="StatusCurrentSramFileHasBeenSaved" xml:space="preserve">
    <value>Current SRAM file has been saved as comparison SRAM file</value>
  </data>
  <data name="StatusCurrentSramFileHasBeenBackedUpTemplate" xml:space="preserve">
    <value>{0} has been backed up</value>
  </data>
  <data name="StatusSramFileHasBeenRestoredFromBackupTemplate" xml:space="preserve">
    <value>{0} has been restored from backup</value>
  </data>
  <data name="CommandDisplayCommands" xml:space="preserve">
    <value>Display commands</value>
  </data>
  <data name="CommandManual" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="CommandSetGame" xml:space="preserve">
    <value>Set current SRAM file's game (save slot)</value>
  </data>
  <data name="CommandSetComparisonGame" xml:space="preserve">
    <value>Set comparison SRAM file's game (save slot)</value>
  </data>
  <data name="CommandDisplaySettings" xml:space="preserve">
    <value>Display settings</value>
  </data>
  <data name="CommandIncludeWholeGameBufferComparison" xml:space="preserve">
    <value>Compare also whole game buffer while comparison</value>
  </data>
  <data name="CommandIncludeNonGameBufferComparison" xml:space="preserve">
    <value>Compare also non game buffer while comparison</value>
  </data>
  <data name="SetGameMaxTemplate" xml:space="preserve">
    <value>Set Game (1-{0} or any other key for all games) to compare:</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Comparison" xml:space="preserve">
    <value>Comparison</value>
  </data>
  <data name="Offset" xml:space="preserve">
    <value>Offset</value>
  </data>
  <data name="ChangeShort" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="CompShort" xml:space="preserve">
    <value>Comp</value>
  </data>
  <data name="CurrShort" xml:space="preserve">
    <value>Curr</value>
  </data>
  <data name="StatusTotalDiffBytesTemplate" xml:space="preserve">
    <value>Total: {0} bytes changed (outside game)</value>
  </data>
  <data name="SectionGameHasChangedTemplate" xml:space="preserve">
    <value>Game {0} has changed</value>
  </data>
  <data name="SectionGameUnknownsChangedTemplate" xml:space="preserve">
    <value>Game {0} unknowns only</value>
  </data>
  <data name="StatusGameUnknownsChangedGameIdBytesTemplate" xml:space="preserve">
    <value>Game {0} unknowns only: {1} bytes changed</value>
  </data>
  <data name="Section" xml:space="preserve">
    <value>Section</value>
  </data>
  <data name="SectionGameChangedTemplate" xml:space="preserve">
    <value>Game {0} all (knowns + unknowns)</value>
  </data>
  <data name="StatusGameChangedBytesTemplate" xml:space="preserve">
    <value>Game {0} all (knowns + unknowns):   {1} bytes changed</value>
  </data>
  <data name="SectionNonGameUnknowns" xml:space="preserve">
    <value>Non Game unknowns</value>
  </data>
  <data name="StatusNonGameUnknownsBytesTemplate" xml:space="preserve">
    <value>Non game unknowns: {0} bytes changed</value>
  </data>
  <data name="StatusSramChangedBytesTemplate" xml:space="preserve">
    <value>{0} SRAM bytes changed</value>
  </data>
  <data name="StatusCurrentComparisonExportedFilepathTemplate" xml:space="preserve">
    <value>Current comparison exported to "{0}"</value>
  </data>
  <data name="StatusNoSramBytesChanged" xml:space="preserve">
    <value>No SRAM bytes changed</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Bytes" xml:space="preserve">
    <value>Bytes</value>
  </data>
  <data name="CommandOverwriteComparisonFile" xml:space="preserve">
    <value>Overwrite comparison file with current SRAM file</value>
  </data>
  <data name="CommandBackupCurrentFile" xml:space="preserve">
    <value>Back-up current SRAM file</value>
  </data>
  <data name="CommandRestoreCurrentFile" xml:space="preserve">
    <value>Restore current SRAM file from backup</value>
  </data>
  <data name="CommandBackupComparisonFile" xml:space="preserve">
    <value>Back-up comparison SRAM file</value>
  </data>
  <data name="CommandRestoreComparisonFile" xml:space="preserve">
    <value>Restore comparison SRAM file from backup</value>
  </data>
  <data name="CommandCompareFiles" xml:space="preserve">
    <value>Compare current SRAM file and with comparison file</value>
  </data>
  <data name="CommandWipeOutput" xml:space="preserve">
    <value>Wipe previous console output</value>
  </data>
  <data name="CommandExportComparisonResult" xml:space="preserve">
    <value>Export current comparison result</value>
  </data>
  <data name="CommandQuit" xml:space="preserve">
    <value>Quit</value>
  </data>
  <data name="EnterCommand" xml:space="preserve">
    <value>Enter command and press enter.</value>
  </data>
  <data name="NewUserAdviceCommandTemplate" xml:space="preserve">
    <value>New here? Type ({0}) for manual and press enter</value>
  </data>
  <data name="Game" xml:space="preserve">
    <value>Game</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Sram" xml:space="preserve">
    <value>SRAM</value>
  </data>
  <data name="Backup" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="ErrorComparisonFileDoesNotExist" xml:space="preserve">
    <value>The comparison file "{0}" has not been created yet. Consider pressing O to create it.</value>
  </data>
  <data name="ErrorNoValidCommand" xml:space="preserve">
    <value>"{0}" is no valid command.</value>
  </data>
  <data name="ErrorComparisoGameSetButNotGame" xml:space="preserve">
    <value>Game (save slot) for comparison srm file can only be set if current srm file's game is set first.</value>
  </data>
  <data name="SameAsCurrentGame" xml:space="preserve">
    <value>Same as current game</value>
  </data>
  <data name="CmdGroupBackup" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="CmdGroupComparison" xml:space="preserve">
    <value>Comparison</value>
  </data>
  <data name="CmdGroupSetGame" xml:space="preserve">
    <value>Set game (save slot)</value>
  </data>
  <data name="CmdGroupSetFlags" xml:space="preserve">
    <value>Set flags</value>
  </data>
  <data name="CmdGroupDisplay" xml:space="preserve">
    <value>Display</value>
  </data>
  <data name="CurrentSramFile" xml:space="preserve">
    <value>Current SRAM file</value>
  </data>
  <data name="ComparisonSramFile" xml:space="preserve">
    <value>Comparison SRAM file</value>
  </data>
  <data name="ErrorGameFileIsNotSrmFileTypeFilepathTemplate" xml:space="preserve">
    <value>{0} current file must have .srm file extension. Did you just forget to quote the path? Was: {1}</value>
  </data>
  <data name="ErrorCompGameFileIsNotCompFileTypeFilepathTemplate" xml:space="preserve">
    <value>{0} comparison file must have .comp file extension. Did you just forget to quote the path? Was: {1}</value>
  </data>
</root>